Lecture 4
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (Star.java)
Write a program that takes n and prints the pattern bellow:
*
**
***
****
*****
...
where there should be exactly n lines of stars.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (Factorial.java)
Write a program that takes n and computes n!.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (InRange.java)
Write a program that takes two integers a and b. Then it keeps
taking integers until the user enters an integer number in range
[a,b).
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (Fibo.java)
Write a program that takes n and computes the nth Fibonacci
number.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (StrRev.java)
Write a program that takes a string str and prints the reverse of
str.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (Palindrome.java)
Write a program that takes a string str and checks if it is a
palindrome.

rev = str
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (Distinct.java)
Write a program that computes the minimum number of
characters that must be removed from the string str to have a
new string with no identical adjacent characters. (mojaver yeksan - ccc => c, acacac => acacac)
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (Guess.java)
Write a program that asks the user to guess a target integer
number (the target number is hard-coded into the program). It
should guide the user with ”Your guess is too low” or ”Your
guess is too high” sentences.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (DotPlot.java)
Write a program that takes two strings str1 and str2 and
computes the dot-plot of comparing these strings.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (Candy.java)
Randomness is not always stressful (remember rolling your
names)! Sometimes, it can be delicious like winning a candy!
Write a program that takes the number of students following by
their names (from a file using input redirection), and choose a
student randomly as the winner.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------






Lecture 5
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (Password.java)
Create a method that generates random passwords of a given
length containing lower case letters.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (Password.java)
Improve previous passwords by generating passwords with at
least one digit and one special character.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (BoxPrint.java)
Implement the method boxString.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (FiboBin.java)
We call an integer number n a FiboBinary number if there is an
integer i such that:
n = fib(i) + bin(fib(i)),
where fib(i) is the i’th Fibonacci number and bin(x) is the
number of ones in the binary representation of x.
Implement a method that checks whether a number is
FiboBinary or not.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (Brackets.java)
Create a recursive method that takes n and prints the following
pattern which has the length of 2n.
[[[[[[]]]]]]
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------


1 5 6 2 6 8




Lecture 6
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (EvenSum.java)
Write a method that takes an integer array as input and returns
the sum of elements at even positions.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (RevArray.java)
Write a method that takes an integer array as input and returns
a new array which is filled with the input elements in reverse
order.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (EvenSum.java)
Write a method that takes an integer array as input and returns
the sum of elements at even positions.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (Login.java)
Write a program that simulates a login system which takes a
username and a password, checks for a match, and prompt the
user with success or failure.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (MatrixProduct.java)
Write a method that takes two 2-D integer matrices a and b as
inputs and returns a × b.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (FallDown.java)
Write a program that takes a map m and find the path that
enters from the top and exits from the bottom.
Input maps have r rows (r is an odd integer) and c columns.
Even rows of the map (starting from zero) are blocked with
tiles. In each row of blocks, there is exactly one hole through
which you can pass down.
******
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (ArrayToList.java)
Write a method that converts a 2-D array of strings into an
array list of array lists of strings!
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (PrimeFactors.java)
Write a method that takes an integer and returns all of its
prime factors.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise (ExtractWords.java)
Write a method that takes a string and returns all of the words
in that string.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------






Lecture 7
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise ( SelectionSort.java )
Implement a method that performs selection sort on an array of
integers.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise ( InsertionSort.java )
Implement a method that performs insertion sort on an array of
integers.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise ( MergeSort.java )
Implement a method that performs merge sort on an array of integers.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
Exercise ( BinarySearch.java )
Implement a method that performs binary search on a sorted array
(increasing order) of integers (in both iterative and recursive forms).
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------